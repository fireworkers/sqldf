source("https://bioconductor.org/biocLite.R")
biocLite()
biocLite()
bioValid()
biocValid()
biocValid("Limma")
browseVignettes("DESeq")
source("https://bioconductor.org/biocLite.R")
biocLite()
source("https://bioconductor.org/biocLite.R")
biocLite()
biocValid('RNASeq')
sessionInfo()
biocLite("BiocUpgrade")
pkgs <- rownames(installed.packages())
biocLite(pkgs, type="source")
library(Biostrings)
library(Biobase)
library(Biostrings)
x=1.0
x
x=1:10
x
names(x)=letters[1:10]
names
letters
class(x)
x[1:3]
x[c("a")]
from Bio.seq import Seq
setwd('~/Desktop/workshop')
setwd('~/Desktop/workshop/data')
read.csv(file = 'inflammation-01.csv')
read.csv(file = 'inflammation-01.csv', header = FALSE)
data <- read.csv(file = 'inflammation-01.csv', header = FALSE)
View(data)
head(data)
class(data)
dim(data)
data[1,1]
data[30,20]
1:4
data[5:10, 1:10]
data[c(1,3,5),c(2,4,6)]
data[1,]
data[,16]
patient_1 <- data[1,]
max(patient_1)
min(patient_1)
mean(as.numeric(patient_1))
View(patient_1)
median(data[,7])
sd(data[,7])
summary(data)
summary(data[,1:4])
avg_patient inflammation <- apply(data, 1, mean)
avg_patient_inflammation <- apply(data, 1, mean)
avg_patient_inflammation
avg_day_inflammation <- apply(data, 2, mean)
avg_day_inflammation
animal[1:3]
animal <- c("m", "o", "n", "k", "e", "y")
animal[1:3]
animal[4:6]
animal[-1]
animal[-1:4]
animal[-1:-4]
animal[-1:-3]
animal[-4]
animal[4:1]
animal[-1:-4]
animal[-1,-3,-4,-5]
animal[-1]
new <- c(animal[5], animal[2], animal[3])
new
max(data[5, 3:7])
? seq
whichpatients <- seq(2,40,2)
whichdays <- c(1:5)
data2 <- data
new1 <- animal[c(5,2,3)]
new1
new1 <- animal[c(5,2:3)]
new1
plot(avg_day_inflammation)
max_day_inflammation <- apply(data, 2, max)
plot(max_day_inflammation)
min_day_inflammation <- apply(data, 2, min)
plot(min_day_inflammation)
plot(apply(data,2,min))
plot(apply(data, 2, sd))
setwd("~/Desktop/workshop/data")
fahr_to_kelvin <- function(temp){
kelvin <- ((temp-32)* (5/9)) +273.15
return(kelvin)
}
fahr_to_kelvin(32)
fahr_to_kelvin(212)
kelvin_to_celsius <- function(temp){
celsius <- temp - 273.15
return(celsius)
}
kelvin_to_celsius(0)
fahr_to_celsius <- function(temp){
temp_k <- fahr_to_kelvin(temp)
result <- kelvin_to_celsius(tempk)
return(result)
}
fahr_to_celsius(32)
fahr_to_celsius <- function(temp){
temp_k <- fahr_to_kelvin(temp)
result <- kelvin_to_celsius(temp_k)
return(result)
}
fahr_to_celsius(32)
fahr_to_celsius(212)
kelvin_to_celsius(fahr_to_kelvin(32))
kelvin_to_celsius(fahr_to_kelvin(212))
fence <- function(original, wrapper){
new <- c(wrapper, original, wrapper)
return(new)
}
best_practice <- c("Write", "programs", "for", "people", "not", "computers")
asterisk <- "***"
fence(best_practice, asterisk)
outside <- function(vector){
return(vector[1],vector[length(vector)])
}
dry_principle <- c("Don't", "repeat", "yourself", "or", "others")
outside(dry_principle)
outside <- function(vector){
return(vector[1,length(vector)])
}
outside(dry_principle)
outside <- function(vector){
return(c(vector[1,length(vector)])
}
outside <- function(vector){
return(c(vector[1,length(vector)]))
}
outside(dry_principle)
outside <- function(vector){
new <- c(vector[1])
return(c(vector[1],vector[length(vector)]))
}
outside(dry_principle)
outside <- function(vector){
return(c(vector[1],vector[length(vector)]))
}
outside(dry_principle)
center <- function(data, desired){
new_data <- (data-mean(data)) + desired
return(new_data)
}
z <- c(0,0,0,0)
centeR(z)
center(z)
center(z, 3)
z <- c(1,1,1,1)
center(z, 3)
dat <- read.csv("inflammation-01.csv", header=FALSE)
centered <-center(dat[,4], 0)
head(centered)
min(dat[,4])
max(dat[,4])
mean(dat[,4])
min(centered)
max(centered)
mean(centered)
sd(dat[,4])
sd(centered)
analyze <- function(file){
data <- read.csv(file, header=FALSE)
plot(apply(data, 2, mean))
plot(apply(data, 2, max))
plot(apply(data, 2, min))
}
analyze('data/inflammation_01.csv')
analyze('inflammation_01.csv')
analyze('inflammation-01.csv')
z <- c(1,1,1,1)
center(z, 3)
setwd("~/Desktop/workshop")
analyze <- function(filename) {
# Plots the average, min, and max inflammation over time.
# Input is character string of a csv file.
dat <- read.csv(file = filename, header = FALSE)
avg_day_inflammation <- apply(dat, 2, mean)
plot(avg_day_inflammation)
max_day_inflammation <- apply(dat, 2, max)
plot(max_day_inflammation)
min_day_inflammation <- apply(dat, 2, min)
plot(min_day_inflammation)
}
analyze("data/inflammation-01.csv")
analyze("data/inflammation-02.csv")
best_practice <- c("Let", "the", "computer", "do", "the", "work")
print_words <- function(sentence) {
print(sentence[1])
print(sentence[2])
print(sentence[3])
print(sentence[4])
print(sentence[5])
print(sentence[6])
}
print_words(best_practice)
best_practice[-6]
print_words(best_practice[-6])
print_words <- function(sentence){
for (word in sentence) {
print(word)
}
}
print_words(best_practice)
print_words(best_practice[-6])
print_N <- function(num){
N=seq(num)
for i in N {
print(i)
}
}
print_N <- function(num){
N=seq(num)
for (i in N) {
print(i)
}
}
print_N(5)
total <- function(var){
y=0
for (i in var){
y=y+i
}
return(y)
}
ex_vec <- c(4, 8, 15, 16, 23, 42)
total(ex_vec)
total <- function(var){
y <- 0
for (i in var){
y <- y+i
}
return(y)
}
total(ex_vec)
expo <- function( x, y) {
N <- seq(y)
for (i in N){
x <- x*x
}
}
expo(2,4)
expo <- function( x, y) {
N <- seq(y)
for (i in N){
x <- x*x
}
return(x)
}
expo(2,4)
return(result)
return(result)
expo <- function( x, y) {
result <- 1
for (i in seq(y)){
result <- result*x
}
return(result)
}
expo(2,4)
list.files(path= "data", pattern="csv")
list.files(path="data", pattern="inflammation")
list.files(path="data", pattern ="csv", full names=TRUE)
list.files(path="data", pattern ="csv", full names=TRUE)
list.files(path="data", pattern ="csv", full.names=TRUE)
filenames=list.files(path="data", pattern ="csv", full.names=TRUE)
filenames <- filenames[1:3]
analyze(f)
for (f in filenames){
print(f)
analyze(f)
}
filenames=list.files(path="data", pattern ="csv", full.names=TRUE)
filenames <- filenames[1:3]
for (f in filenames){
print(f)
analyze(f)
}
plot.new()
filenames=list.files(path="data", pattern ="csv", full.names=TRUE)
filenames <- filenames[1:3]
for (f in filenames){
print(f)
analyze(f)
}
filenames=list.files(path="data", pattern ="inflammation", full.names=TRUE)
filenames <- filenames[1:3]
for (f in filenames){
print(f)
analyze(f)
}
analyze_all <- function(fpattern){
filenames=list.files(path="data", pattern= fpattern, full.names=TRUE)
for (f in filenames){
analyze(f)
}
}
analyze_all("inflammation")
plot.new()
analyze_all("inflammation")
